#
# Execute tests and Validate new contracts on pull request
#
# Checks whether added contracts are valid
#
# TODO: do not execute scripts from the pulled-in branch...
#

name: validate

on:
  pull_request:
    types: 
      - opened
      - synchronize
    branches:
      - test/gha

jobs:
  validate:
    runs-on: ubuntu-18.04
    steps:
      # checkout code on the branch
      - uses: actions/checkout@v2
      # https://github.com/actions/setup-node

      - uses: actions/setup-node@v2
        with:
          # cache npm dependencies
          # https://github.com/actions/setup-node#caching-packages-dependencies
          cache: 'npm'
          node-version: 16.13.2
          registry-url: "https://registry.npmjs.org/"

      - run: npm i -g npm@6.14.16
      - run: npm ci
      - run: npm run test
      - run: npm run build
      # https://github.com/actions/checkout/issues/160
      # fetch all branches from remote so we can diff with the current branch
      # - run: git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

      # validate contracts

      - name: generate variables
        id: vars
        run: |
          chainid=1
          provideruri=$(\
            grep -E "^$chainid:" nodes \
            | sed -En 's/[0-9]+:[^:]+:(.*)/\1/p' \
            | awk '{ print $2 }' \
          )
          if [[ ! "$provideruri" ]]; then echo "no node for chainid $chainid"; exit 1; fi
          primarybranch="origin/test/gha"

          echo "::set-output name=chainid::$chainid"
          echo "::set-output name=provideruri::$provideruri"
          echo "::set-output name=primarybranch::$primarybranch"

          echo "chainid: $chainid"
          echo "provideruri: $provideruri"
          echo "primarybranch: $primarybranch"

      # get added files
      - uses: lots0logs/gh-action-get-changed-files@2.1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


      # get changed contracts
      - name: get changed contracts
        run: |
          chainid="${{ steps.vars.outputs.chainid }}"
          provideruri="${{ steps.vars.outputs.provideruri }}"

          # extract the unique contract directories added
          #   s/ command:   substitute  https://www.gnu.org/software/sed/manual/html_node/The-_0022s_0022-Command.html
          #   /p flag:      "If the substitution was made, then print the new pattern space"
          #   -n argument:  "disable automatic printing except when explicitly told to via the p command"
          #                 this causes sed to output nothing if nothing was matched 
          #                 otherwise sed outputs the whole line if nothing matched
          #   -E            "Use extended regular expressions rather than basic regular expressions"
          contractdirs=$( \
            cat ~/files_added.json \
              | sed -En 's/^(contracts\/[0-9]+\/0x[a-f0-9]{40})\/.*/\1/p' \
              | sort -u)

          if [[ ! "$contractdirs" ]]; then
            echo "success - no contracts"
          fi

          echo "validating $(echo "$contractdirs" | wc -l) contracts:"
          echo "$contractdirs"
          
          echo "$contractdirs" \
            | ./scripts/verify.sh \
              - \
              --verbose \
              --failfast \
              --provider-uri="$provideruri" \
              --chainid="$chainid"

          echo "success - $(echo "$contractdirs" | wc -l) contracts validated"


      # # get the desired node
      # - id: provideruri
      #   run: |
      #     chainid="${{ steps.chainid.outputs.chainid }}"

      # - run: |
      #       echo "chainid:"
      #       echo "chainid: ${{ steps.vars.outputs.chainid }}"
      #       echo "provideruri:"
      #       echo "chainid: ${{ steps.vars.outputs.provideruri }}"

      # - run: git --no-pager diff origin/test/gha HEAD
      # - run: |
      #     git \
      #       --no-pager \
      #       diff \
      #       --name-status \
      #       origin/test/gha HEAD \
      #       | ./scripts/diffs.sh \
      #         - \
      #         --verbose \
      #         --provider-uri=https://nodes.mewapi.io/rpc/eth
      # - run: "echo result: \"$?\""
