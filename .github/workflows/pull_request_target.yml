name: Validate Contracts

on:
  pull_request_target:
    types: 
      - opened
      - synchronize
      - reopened
      - edited
    branches:
      - devop/gha

# ! danger !:
# https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#understanding-the-risk-of-script-injections
jobs:
  Validate:
    # TODO: if: name PR starts with ...
    runs-on: ubuntu-18.04
    steps:
      # checkout repo/branch being pushed to
      # https://github.com/actions/checkout
      - name: "base: checkout"
        uses: actions/checkout@v2
        with:
          # owner / repo
          repository: ${{ github.event.pull_request.base.repo.full_name }}
          # branch
          ref: ${{ github.event.pull_request.base.ref }}

      - name: install NodeJS
        uses: actions/setup-node@v2
        with:
          # cache npm dependencies
          # https://github.com/actions/setup-node#caching-packages-dependencies
          cache: 'npm'
          node-version: 16.13.2
          registry-url: "https://registry.npmjs.org/"

      - name: set NPM version
        run: npm i -g npm@6.14.16

      - name: "base: create .env file"
        run: |
          cp .env.example .env
          sed -i'' "s/^GITHUB_TOKEN=/GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}/" .env

      #  ensure only valid changes have been made
      - name: "base: install, build, test"
        run: |
          npm ci
          npm run test
          npm run build

      # https://github.community/t/how-do-you-figure-out-if-a-pr-is-from-a-work-in-pull-request-target-workflows/170001
      # https://docs.github.com/en/rest/reference/repos#get-a-repository
      - name: "validate contract additions"
        run: |
          node dist/bin.js \
            pull-contracts \
            --token="${{ secrets.GITHUB_TOKEN }}" \
            --repo="${{ github.event.pull_request.base.repo.name  }}" \
            --owner="${{ github.event.pull_request.base.repo.owner.login }}" \
            --head="${{ github.event.pull_request.head.label }}" \
            --base="${{ github.event.pull_request.base.ref }}" \
            --require-contracts \
            --output-verified-addresses=/tmp/added-contracts

      - id: "contracts"
        name: "base: record new contracts"
        run: |
          echo "contracts added:"
          echo "cat 1:"
          cat /tmp/added-contracts
          echo "cat 2:"
          cat /tmp/added-contracts
          echo "??? work ???"
          echo "::set-output name=contracts-added::$(cat /tmp/added-contracts)"


      - name: echo
        run: |
          echo "steps.contracts.outputs.contracts-added:"
          echo "${{ steps.contracts.outputs.contracts-added }}"

      - name: Create PR
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          author: 'EthVMBot <EthVMBot@users.noreply.github.com>'
          commit-message: 'verified contracts: ${{ steps.contracts.outputs.contracts-added }}'
          branch: 'contracts-${{ steps.contracts.outputs.contracts-added }}'
          title: 'verified contracts: ${{ steps.contracts.outputs.contracts-added }}'

      - uses: mshick/add-pr-comment@v1
        with:
          message: |
            **Congratulations!**

            Your contract has been verified and will soon be pulled into the main branch
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # - id: "contracts"
      #   name: "base: record new contracts"
      #   run: |
      #     echo "files added:"
      #     cat /tmp/contract-files-added

      #     echo "contracts added:"
      #     cat /tmp/contracts-added

      #     # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
      #     contracts-added=$(cat /tmp/contracts-added | paste -s -d, -)
      #     echo "contracts added (cs):"
      #     echo "$contracts_added"
      #     echo "::set-output name=CONTRACTS_ADDED::$contracts_added"

      # # checkout the head now that we've verified it's safe
      # - name: "head: checkout"
      #   uses: actions/checkout@v2
      #   with:
      #     # owner / repo
      #     repository: ${{ github.event.pull_request.head.repo.full_name }}
      #     # branch
      #     ref: ${{ github.event.pull_request.head.ref }}

      # - name: "head: create .env file"
      #   run: |
      #     cp .env.example .env
      #     sed -i'' "s/^GITHUB_TOKEN=/GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}/" .env

      # - name: "head: install, build, test"
      #   run: |
      #     npm ci
      #     # npm run test
      #     npm run build

      # # - name: "head: re-validate additions"
      # #   run: |
      # #     node dist/bin.js \
      # #       validate-git-diffs \
      # #       --token=${{ secrets.GITHUB_TOKEN }} \
      # #       --repo="${{ github.event.pull_request.base.repo.name  }}" \
      # #       --owner="${{ github.event.pull_request.base.repo.owner.login }}" \
      # #       --head="${{ github.event.pull_request.head.label }}" \
      # #       --base="${{ github.event.pull_request.base.ref }}" \
      # #       --require-contracts \
      # #       --strict \
      # #       --verbose \
      # #       --verify \
      # #       --save-additions

      # - name: "head: verify & save metadata"
      #   run: |
      #     node dist/bin.js \
      #       verify \
      #       --file=/tmp/contract-files-added \
      #       --save \
      #       --failFast

      # - name: "check git changes"
      #   run: |
      #     echo "git status:"
      #     git log | tac
      #     git status

      # # - uses: EndBug/add-and-commit@v8

      # # - name: "check git changes"
      # #   run: |
      # #     echo "git status:"
      # #     git log | tac
      # #     git status

      # # https://github.com/marketplace/actions/create-pull-request
      # - name: "head: create Pull Request"
      #   uses: peter-evans/create-pull-request@v3
      #   with:
      #     base: ${{ github.event.pull_request.base.repo.ref }}
      #     # author: "EthVM Bot"
      #     # branch: "verified/${{ steps.contracts.outputs.CONTRACTS_ADDED }}"
      #     # commit-message: "added contracts: ${{ steps.contracts.outputs.CONTRACTS_ADDED }}"
      #     # author: EthVMBot <EthVMBot@users.noreply.github.com>
      #     # token: ${{ secrets.GITHUB_TOKEN }}
      #     # repository: ${{ github.event.pull_request.base.repo.full_name }}
      #     # branch: 'test/pr'

      # - name: "check git changes"
      #   run: |
      #     echo "git status:"
      #     git log | tac
      #     git status